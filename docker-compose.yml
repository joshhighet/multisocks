services:
  tor:
    build: ./tor
    #image: ghcr.io/joshhighet/multisocks/tor:latest
    networks:
      - net_tor
    expose:
      - 9050
      - 9051
    deploy:
      replicas: ${SOCKS:-5}
    restart: always

  metrics:
    build: ./metrics
    networks:
      - net_tor
    ports:
      - "8000:8000"
    depends_on:
      - tor
    expose:
      - 8000
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:5173}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  haproxy:
    build: ./haproxy
    restart: always
    depends_on:
      tor:
        condition: service_started
      haconfig-generator:
        condition: service_completed_successfully
    ports:
      - 8080:8080
      - 1337:1337
    volumes:
      - haproxy_conf:/usr/local/etc/haproxy
      - ./haproxy/check-tor.sh:/usr/local/etc/haproxy/check-tor.sh
    networks:
      - net_tor
    
  haconfig-generator:
    build: ./haconfig
    command: python gen_conf.py
    depends_on:
      tor:
        condition: service_started
    volumes:
      - haproxy_conf:/usr/local/etc/haproxy
      - /var/run/docker.sock:/tmp/docker.sock
    networks:
      - net_tor

  dashboard:
    build: ./dashboard
    ports:
      - "3000:3000"
    depends_on:
      - metrics
    networks:
      - net_tor
    environment:
      - VITE_API_URL=http://metrics:8000

volumes:
  haproxy_conf:

networks:
  net_tor:
    name: net_tor
